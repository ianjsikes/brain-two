#!/usr/bin/env node

const Handlebars = require("handlebars");
const fs = require("fs");
const path = require("path");
const args = process.argv.slice(2);

const template = Handlebars.compile(`# {{isodate}} {{unkebab campaign}} Notes

Session notes for [[{{campaign}}]]

## Summary

## Ups and Downs

[//begin]: # "Autogenerated link references for markdown compatibility"
[{{campaign}}]: {{campaign}} "{{unkebab campaign}}"
[//end]: # "Autogenerated link references"
`);

const isodate = () => {
  const date = new Date();
  const pad = (num) => (num < 10 ? `0${num}` : num);

  return `${date.getUTCFullYear()}-${pad(date.getUTCMonth() + 1)}-${pad(
    date.getUTCDate()
  )}`;
};
Handlebars.registerHelper("isodate", isodate);

Handlebars.registerHelper("unkebab", (str) => {
  const capitalize = (str) => `${str.charAt(0).toUpperCase()}${str.slice(1)}`;
  return str.split("-").map(capitalize).join(" ");
});

// const date = isoDate(new Date());
const campaign = args[0];

fs.writeFileSync(
  path.join(
    process.cwd(),
    "session-notes",
    `${isodate()}-${campaign}-notes.md`
  ),
  template({ campaign })
);
